{
    "$schema": "https://json-schema.org/draft-07/schema",
    "type": "object",
    "properties": {
      "$schema": {
        "type": "string",
        "default": "SceneSchem.json"
      },
      "materials": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "default": "NouveauMatériau",
              "description": "Utilisé comme identificateur. Doit être unique"
            },
            "type": {
              "type": "integer",
              "enum": [1,2,3],
              "default": 1,
              "description": "1 : Matériau rugueux à réflection diffuse, 2 : Matériau éméteur de lumière, 3 : Métal"
            },
            "isColorTextured": {
              "type": "boolean",
              "default": false,
              "description": "Si vrai, vas utiliser une texture pour colorer l'objet et l'attribut «texture» pour faire référence à la texture dans les ressources. Si faux, vas utiliser l'attribut «color» pour colorer l'objet. L'un des deux attribut doit être inclut"
            },
            "texture": {
              "type": "string",
              "default": null,
              "description": "Fait référence à une texture dans les ressources. «isColorTextured» doit être vrai pour prendre effet."
            },
            "color": {
              "type": "array",
              "maxLength": 3,
              "minLength": 3,
              "items": [
                {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 1,
                  "default": 0.8
                },
                {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 1,
                  "default": 0.8
                },
                {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 1,
                  "default": 0.8
                }
              ],
              "description": "Vecteur de 3 éléments : rouge, vert et bleu (rvb), définissant la couleur de la surface. «isColorTextured» doit être faux pour prendre effet."
            },
            "emissionIntensity": {
              "type": "number",
              "minimum": 0,
              "default": 0,
              "description": "Définit la luminosité de la surface. «type» doit être 2 pour prendre effet"
            },
            "isRoughnessMapped": {
              "type": "boolean",
              "default": false,
              "description": "Si vrai, vas utiliser la portion alpha de la texture albedo pour définir la ruguosité et l'attribut «texture» pour faire référence à la texture dans les ressources. Si faux, vas utiliser l'attribut «roughness» pour définir la rugosité de la surface"
            },
            "roughness": {
              "type": "number",
              "minimum": 0,
              "maximum": 1,
              "default": 0.5,
              "description": "Définit la rugosité de la surface. 0 est très polie et 1 est parfaitement mat. «isRoughnessMapped» doit être faux pour prendre effet."
            },
            "isNormalMapped": {
              "type": "boolean",
              "default": false,
              "description": "Si vrai, vas utiliser une texture pour définir la normale de la surface et l'attribut «normalMap» pour faire référence à la texture dans les ressources."
            },
            "normalMap": {
              "type": "string",
              "default": null,
              "description": "Fait référence à une texture dans les ressources pour définir la normale de la surface. «isNormalMapped» doit être vrai pour prendre effet."
            },
            "alphaClip": {
              "type": "boolean",
              "default": false,
              "description": "Si vrai, vas utiliser la portion alpha de la texture albedo pour rendre transparent des portions des la surface et l'attribut «texture» pour faire référence à la texture dans les ressources. «isColorMapped» doit être vrai pour prendre effet. Incompatible avec «isRoughnessMapped» = vrai"
            }
          },
          "required": [
            "name",
            "type",
            "isColorTextured",
            "emissionIntensity",
            "isRoughnessMapped",
            "isNormalMapped",
            "alphaClip"
          ],
          "additionalProperties": false
        },
        "description": "Les matériaux doivent êtrent utilisés par les objets (Entities) pour définir comment leur surface est peinte par le GPU"
      },
      "skybox": {
        "type": "object",
        "properties": {
          "HDRI": {
            "type": "string",
            "default": null,
            "description": "Fait référence à une texture dans les ressources. Définit la couleur du ciel."
          },
          "Mesh": {
            "type": "string",
            "default": "skybox",
            "description": "Le modèle utilisé pour la boîte célèste. Le modèle doit être convexe et pas trop gros. CONSEIL : NE PAS MODIFIER."
          },
          "intensity": {
            "type": "number",
            "minimum": 0,
            "default": 1,
            "description": "Intensité lumineuse du ciel."
          }
        },
        "required": [
          "HDRI",
          "Mesh",
          "intensity"
        ],
        "additionalProperties": false,
        "description": "Objet possédant une texture de ciel qui serat toujours dans l'arrière-plan. Projette de la lumière sur toute la scène."
      },
      "Entities": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "default": "NouvelleEntité",
              "description": "Utilisé comme identificateur. Doit être unique"
            },
            "mesh": {
              "type": "string",
              "default": "skybox",
              "description": "Fait référence à un modèle dans les ressources. Définit la forme physique de l'objet."
            },
            "SeparateMesh": {
              "type": "boolean",
              "default": false,
              "description": "Des fois, les objets peuvent êtrent composés de plusieurs morceaux clairement définits dans le fichier. Si vrai, vas créer une entité séparée pour chaque morceau. Si faux, vas regrouper chaque morceau en une seule entitée. Pour de meilleures performances, mettre faux."
            },
            "material": {
              "type": "string",
              "description": "Fait référence à un matériau précédement définit. Définit comment la surface du modèl est peinte par le GPU"
            },
            "position": {
              "type": "array",
              "minLength": 3,
              "maxLength": 3,
              "items": [
                {
                  "type": "number",
                  "default": 0
                },
                {
                  "type": "number",
                  "default": 0
                },
                {
                  "type": "number",
                  "default": 0
                }
              ],
              "description": "Vecteur de 3 éléments : x, y et z. Définit la position de l'objet."
            },
            "rotation": {
              "type": "array",
              "minLength": 3,
              "maxLength": 3,
              "items": [
                {
                  "type": "number",
                  "default": 0
                },
                {
                  "type": "number",
                  "default": 0
                },
                {
                  "type": "number",
                  "default": 0
                }
              ],
              "description": "Vecteur de 3 éléments : x, y et z. Définit un angle de rotation autour de chacuns de ces trois axes pour tourner l'objet."
            },
            "scale": {
              "type": "array",
              "minLength": 3,
              "maxLength": 3,
              "items": [
                {
                  "type": "number",
                  "default": 1
                },
                {
                  "type": "number",
                  "default": 1
                },
                {
                  "type": "number",
                  "default": 1
                }
              ],
              "description": "Vecteur de 3 éléments : x, y et z. Définit la grandeur de l'objet sur chacun des trois axes locaux."
            }
          },
          "required": [
            "name",
            "mesh",
            "SeparateMesh",
            "material",
            "position",
            "rotation",
            "scale"
          ],
          "additionalProperties": false
        },
        "description": "Les objets peuplants la scène."
      },
      "lights": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "position": {
              "type": "array",
              "minLength": 3,
              "maxLength": 3,
              "items": [
                {
                  "type": "number",
                  "default": 0
                },
                {
                  "type": "number",
                  "default": 0
                },
                {
                  "type": "number",
                  "default": 0
                }
              ],
              "description": "Vecteur de 3 éléments : x, y et z. Détermine la position de la lumière."
            },
            "color": {
              "type": "array",
              "minLength": 3,
              "maxLength": 3,
              "items": [
                {
                  "type": "number",
                  "default": 1
                },
                {
                  "type": "number",
                  "default": 1
                },
                {
                  "type": "number",
                  "default": 1
                }
              ],
              "description": "Vecteur de 3 éléments : rouge, vert et bleu (rvb). Détermine la couleur de la lumière."
            },
            "intensity": {
              "type": "number",
              "default": 10,
              "description": "Intensité lumineuse de la lumière."
            }
          },
          "required": [
            "position",
            "color",
            "intensity"
          ],
          "additionalProperties": false
        },
        "description": "Objets de la grosseur d'un point, produisant de la lumière dans le monde."
      },
      "UI": {
        "type": "object",
        "properties": {
          "TexQuads": {
            "type": "array",
            "items":{
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "default": "NouveauTexQuad",
                  "description": "Utilisé comme identificateur. Doit être unique."
                },
                "texture": {
                  "type": "string",
                  "description": "Fait référence à une texture dans les ressources, qui serat utilisée pour colorier le rectangle."
                },
                "position": {
                  "type": "array",
                  "minLength": 2,
                  "maxLength": 2,
                  "items": [
                    {
                      "type": "number",
                      "default": 0
                    },
                    {
                      "type": "number",
                      "default": 0
                    }
                  ],
                  "description": "Vecteur de 2 éléments : x et y. Définit la position sur l'écran du rectangle en pixels."
                },
                "rotation": {
                  "type": "number",
                  "default": 0,
                  "description": "Définit un angle de rotation pour tourner le rectangle."
                },
                "scale": {
                  "type": "array",
                  "minLength": 2,
                  "maxLength": 2,
                  "items": [
                    {
                      "type": "number",
                      "default": 1
                    },
                    {
                      "type": "number",
                      "default": 1
                    }
                  ],
                  "description": "Vecteur de 2 éléments : x et y. Définit la grandeur du rectangle dans chacuns des axes, en pixels."
                }
              },
              "required": [
                "name",
                "texture",
                "position",
                "rotation",
                "scale"
              ],
              "additionalProperties": false
            },
            "description": "Un rectangle contenant une texture."
          },
          "ColorSquare": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "default" : "NouveauColorSquare",
                  "description": "Utilisé comme identificateur. Doit être unique."
                },
                "color": {
                  "type": "array",
                  "minLength": 4,
                  "maxLength": 4,
                  "items": [
                    {
                      "type": "number",
                      "default": 0.8
                    },
                    {
                      "type": "number",
                      "default": 0.8
                    },
                    {
                      "type": "number",
                      "default": 0.8
                    },
                    {
                      "type": "number",
                      "default": 1
                    }
                  ],
                  "description": "Vecteur de 4 éléments : rouge, vert, bleu et alpha (rvba). Définit la couleur (rvb) et la transparance (a, 0 est transparent 1 est opaque) du rectangle."
                },
                "position": {
                  "type": "array",
                  "minLength": 2,
                  "maxLength": 2,
                  "items": [
                    {
                      "type": "number",
                      "default": 0
                    },
                    {
                      "type": "number",
                      "default": 0
                    }
                  ],
                  "description": "Vecteur de 2 éléments : x et y. Définit la position du carré sur l'écran, en pixels."
                },
                "rotation": {
                  "type": "number",
                  "default": 0,
                  "description": "Définit un angle de rotation pour tourner le rectangle."
                },
                "scale": {
                  "type": "array",
                  "minLength": 2,
                  "maxLength": 2,
                  "items": [
                    {
                      "type": "number",
                      "default": 1
                    },
                    {
                      "type": "number",
                      "default": 1
                    }
                  ],
                  "description": "Vecteur de 2 élément : x et y. Définit la grandeur du rectangle sur chacun des axe, en pixels."
                },
                "rayonCoin" : {
                  "type": "number",
                  "default": 0,
                  "description": "Utilisé pour arrondir les coins du rectangle. 0 : les coins sonts parfaitement carré et 0.5 : le carré devient un cercle."
                }
              },
              "required": [
                "name",
                "color",
                "position",
                "rotation",
                "scale"
              ],
              "additionalProperties": false
            },
            "description": "Un rectangle avec une couleur unie."
          },
          "Buttons" : {
            "type": "array",
            "items": {
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Utilisé comme identificateur. Doit être unique."
                },
                "défaut": {
                  "type": "string",
                  "description": "Fait référence à un «TexQuad» ou à un «ColorSquare». Serat le visuel du bouton par défaut."
                },
                "pressé": {
                  "type": "string",
                  "description": "Fait référence à un «TexQuad» ou à un «ColorSquare». Serat le visuel du bouton lorsque pressé."
                },
                "survol": {
                  "type": "string",
                  "description": "Fait référence à un «TexQuad» ou à un «ColorSquare». Serat le visuel du bouton lorsqu'en survol."
                },
                "taille": {
                  "type": "array",
                  "minLength": 2,
                  "maxLength": 2,
                  "items":{
                    "type": "number",
                    "default": 1
                  },
                  "description": "Vecteur de 2 éléments : x et y. Définit la grandeur du bouton sur chacuns des axes, en pixels. Vas ajuster la taille de «défaut», «pressé» et «survol»."
                },
                "position": {
                  "type": "array",
                  "minLength": 2,
                  "maxLength": 2,
                  "items": {
                    "type": "number",
                    "default": 0
                  },
                  "description": "Vecteur de 2 éléments : x et y. Définit la position du bouton sur l'écran, en pixels. Vas ajuster la position de «défaut», «pressé» et «survol»."
                },
                "rotation": {
                  "type": "number",
                  "default": 0,
                  "description": "Définit un angle de rotation pour tourner le bouton. Vas ajuster la rotation de «défaut», «pressé» et «survol»."
                },
                "préréglage": {
                  "type": "string",
                  "enum": [
                    "BOUTON",
                    "SÉLECTION",
                    "CONTRÔLES",
                    "CASE_À_COCHER"
                  ],
                  "$comment": "anyOf est utilisé pour la description.",
                  "anyOf": [
                    {"const": "BOUTON : Vas rester en défaut jusqu'à ce que le doigt relève. Alors il cliquera et reviendra à défaut immédiatement. À utiliser pour des boutons de menus."},
                    {"const": "SÉLECTION : Vas enfoncer lorsque cliqué et rester ainsi jusqu'à ce que le code le réinitialise. À utiliser pour faire une liste à un seul choix."},
                    {"const": "CONTRÔLES : Vas enfoncer lorsque cliqué et remonter immédiatement une fois le doigt relevé. À utiliser pour des contrôles de navigation."},
                    {"const": "CASE_À_COCHER : Vas enconcer lorsqeu cliqué et ne remonter que lorsque cliqué une deuxième fois. À utiliser pour de cases à cocher."}
                  ],
                  "default": "BOUTTON",
                  "description": "Des préréglages définissants le comportement du bouton."
                },
                "comportement": {
                  "type": "object",
                  "properties": {
                    "EnDoigtTouché": {
                      "type": "string",
                      "enum": [
                        "rien",
                        "survol",
                        "clic"
                      ],
                      "$comment": "anyOf est utilisé comme description",
                      "anyOf": [
                        {"const": "rien : ne fera rien."},
                        {"const": "survol : changera l'état en «survol»."},
                        {"const": "clic : cliquera le bouton. Définit par «EnClic»"}
                      ],
                      "default": null,
                      "description": "Définit ce qui arrivera lorsque le doigt touche l'écran sur le bouton."
                    },
                    "EnDoigtRelâche": {
                      "type": "string",
                      "enum": [
                        "reste",
                        "clic",
                        "retourne défaut",
                        "survol"
                      ],
                      "$comment": "anyOf est utilisé comme description",
                      "anyOf": [
                        {"const": "reste : il ne se passera rien, le bouton restera sur l'état dans lequel il est."},
                        {"const": "clic : le bouton sera cliqué. Définit par «EnClic»."},
                        {"const": "retourne défaut : le bouton retournera dans l'état «défaut»."},
                        {"const": "survl : le bouton ira dans l'état «survol»."}
                      ],
                      "default": null,
                      "description": "Définit ce qui ce passe lorsque le doigt relâche l'écran sur le bouton."
                    },
                    "EnDoigtDébarque": {
                      "type": "string",
                      "enum": [
                        "reste",
                        "clic",
                        "retourne défaut"
                      ],
                      "$comment": "anyOf est utilisé comme description",
                      "anyOf": [
                        {"const": "reste : il ne se passra rien, le bouton restera dans l'état dans lequel il est."},
                        {"const": "clic : le bouton serat cliqué. Définit par «EnClic»."},
                        {"const": "retourne défaut : le bouton retournerat à l'état «défaut»."}
                      ],
                      "default": null,
                      "description": "Ce qui se passera lorsque le doigt glisse hors du bouton."
                    },
                    "EnSurvol": {
                      "type": "string",
                      "enum": [
                        "rien",
                        "clic",
                        "survol"
                      ],
                      "$comment": "anyOf est utilisé comme description",
                      "anyOf": [
                        {"const": "rien : il ne se passera rien."},
                        {"const": "clic : le bouton serat cliqué. Définit par «EnClic»."},
                        {"const": "survol : le bouton irat dans l'état «survol»."}
                      ],
                      "default": null,
                      "description": "Ce qui se passera si le doigt touche l'écran hors du bouton et qu'il glisse sur le bouton."
                    },
                    "EnSurvolDébarque": {
                      "type": "string",
                      "enum": [
                        "reste",
                        "clic",
                        "retourne défaut"
                      ],
                      "$comment": "anyOf est utilisé comme description",
                      "anyOf": [
                        {"const": "reste : il ne se passera rien, le bouton restera dans l'état dans lequel il est."},
                        {"const": "clic : le bouton serat cliqué. Définit par «EnClic»."},
                        {"const": "retourne défaut : le bouton retournerat dans l'état «défaut»."}
                      ],
                      "default": null,
                      "description": "Ce qui se passera lorsque le doigt qui survolait le bouton glisse hors du bouton."
                    },
                    "EnSurvolRelâche": {
                      "type": "string",
                      "enum": [
                        "reste",
                        "clic",
                        "retourne défaut"
                      ],
                      "$comment": "anyOf est utilisé comme description",
                      "anyOf": [
                        {"const": "reste : il ne se passera rien, le bouton restera dans l'état dans lequel il est."},
                        {"const": "clic : le bouton serat cliqué. Définit par «EnClic»."},
                        {"const": "retourne défaut : le bouton retournerat dans l'état «défaut»."}
                      ],
                      "default": null,
                      "description": "Ce qui se passera lorsque le doigt qui survolait le bouton relâche l'écran sur le bouton."
                    },
                    "EnClic": {
                      "type": "string",
                      "enum": [
                        "rien",
                        "clic reste",
                        "clic immédiat",
                        "alterne"
                      ],
                      "$comment": "anyOf est utilisé comme description",
                      "anyOf": [
                        {"const": "rien : il ne se passera rien."},
                        {"const": "clic reste : le bouton irat dans l'état «pressé» et y resterat jusqu'à ce qu'un autre état soit définit."},
                        {"const": "clic immédiat : le bouton irat dans l'état «pressé» et reviendras à l'état «défaut» aussitôt que possible."},
                        {"const": "alterne : le bouton irat dans l'état «pressé» s'il est dans l'état «défaut» et vice-versa"}
                      ],
                      "default": null,
                      "description": "Ce qui se passerat lorsque le bouton est cliqué. Un des autres attributs doit être définit «clic», pour prendre effet."
                    }
                  },
                  "additionalProperties": false,
                  "description": "Diverses propriétés qui définissent le comportement du bouton. Passera par-dessus «préréglage»."
                }
              },
              "required": [
                "name",
                "défaut",
                "pressé",
                "taille",
                "position",
                "rotation"
              ],
              "additionalProperties": false
            },
            "description": "Objet avec lequel on peut interragir en appuyant dessus."
          },
          "TextBoxes" : {
            "type": "array",
            "items": {
              "properties": {
                "name" : {
                  "type" : "string",
                  "description": "Utilisé comme identificateur. Doit être unique."
                },
                "font" : {
                  "type" : "string",
                  "description": "Fait référence à une police dans les ressources. Définit la forme de chaques charactères."
                },
                "text" : {
                  "type": "string",
                  "description": "Texte qui serat affiché dans la boîte de texte."
                },
                "size" : {
                  "type": "array",
                  "minLength": 2,
                  "maxLength": 2,
                  "items" : [
                    {
                      "type" : "number",
                      "default": 300
                    },
                    {
                      "type": "number",
                      "default": 300
                    }
                  ],
                  "description": "Vecteur de 2 éléments : x et y. Définit la taille des bornes de la boîte de texte en pixels. Les charactères peuvent interragir avec ces limites."
                },
                "position" : {
                  "type": "array",
                  "minLength": 2,
                  "maxLength": 2,
                  "items" : [
                    {
                      "type" : "number",
                      "default" : 0
                    },
                    {
                      "type" : "number",
                      "default": 0
                    }
                  ],
                  "description": "Vecteur de 2 éléments : x et y. Définit la position sur l'écran de la boîte de texte, en pixels."
                },
                "rotation" : {
                  "type" : "number",
                  "default" : 0,
                  "description": "Définit un angle de rotation pour tourner la boîte de texte."
                },
                "scale" : {
                  "type": "array",
                  "minLength": 2,
                  "maxLength": 2,
                  "items": [
                    {
                      "type" : "number",
                      "default" : 3
                    },
                    {
                      "type" : "number",
                      "default" : 3
                    }
                  ],
                  "description": "Vecteur de 2 éléments : x et y. Définit la taille de la boîte de texte et de ses charactère."
                }
              },
              "required": [
                "name",
                "font",
                "size",
                "position",
                "rotation",
                "scale"
              ],
              "additionalProperties": false
            },
            "description": "Des boîtes pouvant contenir du texte."
          },
          "Glissoires" : {
            "type": "array",
            "items": {
              "properties": {
                "nom":{
                  "type": "string",
                  "default": "glissoire",
                  "description": "Utilisé comme identificateur. Doit être unique."
                },
                "barre": {
                  "type": "string",
                  "description": "Fait référence à un «TexQuad» ou un «ColorSquare» définit précédemment pour former la barre sur laquelle le bouton vas glisser."
                },
                "bouton": {
                  "type": "string",
                  "description": "Fait référence à un «TexQuad» ou un «ColorSquare» définit précédemment pour former le bouton qui vas glisser sur la barre."
                },
                "Valeur Min": {
                  "type": "number",
                  "default": -10,
                  "description": "La plus petite valeur admise sur la glissoire."
                },
                "Valeur Max": {
                  "type": "number",
                  "default": 10,
                  "description": "La plus grande valeur admise sur la glissoire."
                },
                "Valeur Défaut": {
                  "type": "number",
                  "default": 0,
                  "description": "La valeur par défaut de la glissoire."
                },
                "ÉchelonTaille": {
                  "type": "number",
                  "default": 0.1,
                  "description": "La taille de l'échelon des valeurs possibles sur la glissoire."
                },
                "position": {
                  "type": "array",
                  "minLength": 2,
                  "maxLength": 2,
                  "items": [
                    {
                      "type": "number",
                      "default": 0
                    },
                    {
                      "type": "number",
                      "default": 0
                    }
                  ],
                  "description": "Vecteur de 2 éléments : x et y. Définit la position de la glissoire."
                },
                "rotation": {
                  "type": "number",
                  "default": 0,
                  "description": "Définit un angle de rotation pour touner la glissoire."
                }
              },
              "required": [
                "nom",
                "barre",
                "bouton",
                "position",
                "rotation"
              ],
              "additionalProperties": false
            },
            "description": "Des barres avec des boutons qu'on peut faire glisser pour changer une valeur."
          }
        },
        "required": [
          "TexQuads",
          "ColorSquare",
          "Buttons",
          "TextBoxes",
          "Glissoires"
        ],
        "description": "Contient l'ensemble des éléments d'interface utilisateur."
      }
    },
    "required": [
      "$schema",
      "materials",
      "skybox",
      "Entities",
      "lights",
      "UI"
    ]
}
  
  